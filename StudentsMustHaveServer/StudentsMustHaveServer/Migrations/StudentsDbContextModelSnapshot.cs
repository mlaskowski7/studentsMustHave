// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentsMustHaveServer.Data;

#nullable disable

namespace StudentsMustHaveServer.Migrations
{
    [DbContext(typeof(StudentsDbContext))]
    partial class StudentsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-rc.1.24451.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StudentsMustHaveServer.Models.Homework", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Student_ID")
                        .HasColumnType("int");

                    b.Property<int>("Student_Id")
                        .HasColumnType("int")
                        .HasColumnName("Student_ID");

                    b.Property<int>("Subject_ID")
                        .HasColumnType("int");

                    b.Property<int>("Subject_Id")
                        .HasColumnType("int")
                        .HasColumnName("Subject_ID");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Student_ID");

                    b.HasIndex("Subject_ID");

                    b.ToTable("Homeworks", t =>
                        {
                            t.Property("Student_ID")
                                .HasColumnName("Student_ID1");

                            t.Property("Subject_ID")
                                .HasColumnName("Subject_ID1");
                        });
                });

            modelBuilder.Entity("StudentsMustHaveServer.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("Student_ID");

                    b.Property<int>("Student_ID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Student_ID");

                    b.ToTable("Projects", t =>
                        {
                            t.Property("Student_ID")
                                .HasColumnName("Student_ID1");
                        });
                });

            modelBuilder.Entity("StudentsMustHaveServer.Models.ProjectTech", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("int")
                        .HasColumnName("Project_ID");

                    b.Property<int>("TechId")
                        .HasColumnType("int")
                        .HasColumnName("Tech_ID");

                    b.Property<int>("Project_ID")
                        .HasColumnType("int");

                    b.Property<int>("Tech_ID")
                        .HasColumnType("int");

                    b.HasKey("ProjectId", "TechId");

                    b.HasIndex("TechId");

                    b.ToTable("ProjectTechs", t =>
                        {
                            t.Property("Project_ID")
                                .HasColumnName("Project_ID1");

                            t.Property("Tech_ID")
                                .HasColumnName("Tech_ID1");
                        });
                });

            modelBuilder.Entity("StudentsMustHaveServer.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Student_ID")
                        .HasColumnType("int");

                    b.Property<int>("Student_Id")
                        .HasColumnType("int")
                        .HasColumnName("Student_ID");

                    b.Property<int>("Tech_ID")
                        .HasColumnType("int");

                    b.Property<int>("Tech_Id")
                        .HasColumnType("int")
                        .HasColumnName("Tech_ID");

                    b.HasKey("Id");

                    b.HasIndex("Student_ID");

                    b.HasIndex("Tech_ID");

                    b.ToTable("Skills", t =>
                        {
                            t.Property("Student_ID")
                                .HasColumnName("Student_ID1");

                            t.Property("Tech_ID")
                                .HasColumnName("Tech_ID1");
                        });
                });

            modelBuilder.Entity("StudentsMustHaveServer.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("StudentsMustHaveServer.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Importance")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("StudentsMustHaveServer.Models.Tech", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Techs");
                });

            modelBuilder.Entity("StudentsMustHaveServer.Models.Homework", b =>
                {
                    b.HasOne("StudentsMustHaveServer.Models.Student", "Student")
                        .WithMany("Homeworks")
                        .HasForeignKey("Student_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentsMustHaveServer.Models.Subject", "Subject")
                        .WithMany("Homeworks")
                        .HasForeignKey("Subject_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("StudentsMustHaveServer.Models.Project", b =>
                {
                    b.HasOne("StudentsMustHaveServer.Models.Student", "Student")
                        .WithMany("Projects")
                        .HasForeignKey("Student_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("StudentsMustHaveServer.Models.ProjectTech", b =>
                {
                    b.HasOne("StudentsMustHaveServer.Models.Project", "Project")
                        .WithMany("ProjectTechs")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentsMustHaveServer.Models.Tech", "Tech")
                        .WithMany("ProjectTechs")
                        .HasForeignKey("TechId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Tech");
                });

            modelBuilder.Entity("StudentsMustHaveServer.Models.Skill", b =>
                {
                    b.HasOne("StudentsMustHaveServer.Models.Student", "Student")
                        .WithMany("Skills")
                        .HasForeignKey("Student_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentsMustHaveServer.Models.Tech", "Tech")
                        .WithMany("Skills")
                        .HasForeignKey("Tech_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Tech");
                });

            modelBuilder.Entity("StudentsMustHaveServer.Models.Project", b =>
                {
                    b.Navigation("ProjectTechs");
                });

            modelBuilder.Entity("StudentsMustHaveServer.Models.Student", b =>
                {
                    b.Navigation("Homeworks");

                    b.Navigation("Projects");

                    b.Navigation("Skills");
                });

            modelBuilder.Entity("StudentsMustHaveServer.Models.Subject", b =>
                {
                    b.Navigation("Homeworks");
                });

            modelBuilder.Entity("StudentsMustHaveServer.Models.Tech", b =>
                {
                    b.Navigation("ProjectTechs");

                    b.Navigation("Skills");
                });
#pragma warning restore 612, 618
        }
    }
}
